Zielhierarchie

•Strategische Ziele (langfristig)
Als strategisches Ziel muss die Bereitstellung der im Exposé genannten, gewünschten Funktionalitäten 
in ihrem vollen Umfang festgelegt werden. Weiterhin sollen im Verlauf des Projektes entwickelte Ideen 
zur Verbesserung der Nutzungserfahrung umgesetzt werden.

•Taktische Ziele (mittelfristig)
Taktisches Ziel muss die Lauffähigkeit der Anwendung in einer Testumgebung sein. 
Es sollen alle gewünschten Funktionen in diesem Rahmen ausführbar sein.

•Operative Ziele (kurzfristig)
Als operatives Ziel muss die Kommunikation zwischen den Nutzern und dem Anwendungs-Server, 
dem E-Mail-Server, sowie die Kommunikation der Nutzer untereinander funktionieren. 
Es soll die Automatisierung des Abgleichs der "Bibliotheken" und "Wunschlisten" der Nutzer 
und die darauf folgende Generierung der Benachrichtigung realisiert werden. Es kann die Nutzerverwaltung, 
das Bewertungssystem und die Verfolgungsoption umgesetzt werden.


related-works (Marktrecherche)

bookcrossing.com - "Bookcrossing ist eine weltweite Bewegung zur kostenlosen Weitergabe von Büchern an bekannte, 
in der Regel aber an unbekannte Personen. Über eine zentrale Datenbank auf der Website des Projekts kann dabei 
der Weg des Buches von allen vorherigen Besitzern verfolgt werden." (Wikipedia: Bookcrossing. 
URL http://de.wikipedia.org/wiki/Bookcrossing, Stand:23.04.2015) "Jedes Buch wird, bevor es weitergegeben wird, 
auf der Bookcrossing-Webseite registriert und bekommt eine eigene BCID (BookCrossing-IDentitätsnummer). 
Gleichzeitig wird für das Buch eine eigene Internet(unter)seite angelegt, auf der der aktuelle 
und alle zukünftigen Besitzer ihre Kommentare zu dem Buch hinterlassen können. 
Nachdem man das Buch mit einer handschriftlichen Bemerkung versehen oder ein Label eingeklebt hat, 
auf dem die BCID eingetragen ist, wird es an Freunde weitergegeben oder irgendwo in der Öffentlichkeit liegengelassen.
[...] In der Regel wird dieser „release“ auch noch in die Datenbank eingetragen, 
damit andere Bookcrosser gezielt auf die Suche nach dem Buch gehen können." 
(Wikipedia: Bookcrossing. URL http://de.wikipedia.org/wiki/Bookcrossing, Stand:23.04.2015)
Vorteile der eigenen Anwendung sind vor allem das gezielte Suchen nach Autoren, Titeln und die ISBN-Suche, 
sowie die Tauschmöglichkeit. Die Bücher müssen nicht gekennzeichnet werden. 
Im Allgemeinen ist bookcrossing wohl eher eine besondere Erfahrung als nutzenorientiert. 
Die Möglichkeit ein nicht zum Tausch angebotenes Buch auf die "Wunschliste" zu setzen, 
sowie die Einbindung von kommerziellen Anbietern macht die geplante Anwendung praktischer.

bookmooch.com - Netzwerk für kostenlosen Büchertausch. Der Idee der geplanten Anwendung recht ähnlich, 
vor allem, da es auch über ein System mit Wunsch- und Bestandsliste verfügt, doch mit ein paar relevanten Unterschieden.
Auf bookmoonch.com können Bücher angeboten werden und der Anbieter erhält einen zehntel Punkt dafür. 
Für das Versenden eines Buches an einen anderen Nutzer bekommt er einen Punkt. 
Um ein angebotenes Buch zu erhalten muss ein Nutzer lediglich einen Punkt "ausgeben". 
Nachteile von bookmoonch.com sind offensichtlich. Misbrauch ist leicht: Anmelden unter Synonym, 
zehn Bücher anbieten und ein Buch zugeschickt bekommen. Vorteile der eigenen Anwendung 
speziell gegenüber bookmoonch.com ist also vor allem der optionale, kostenpflichtige Treuhandservice. 
Außerdem die direktere Einbindung von kommerziellen Anbietern.

tauschticket.de - Netzwerk für gebührenpflichtigen Artikeltausch. Funktioniert über Tickets, 
die man für vertauschte Artikel erhält (1-5). Hier fallen 0,49€ Gebühr pro ertauschtem Artikel an. 
Vorteile der eigenen Anwendung sind vor allem die Möglichkeit des kostenfreien Tausches, 
die Einbindung kommerzieller Anbieter und die Möglichkeit des Verfolgens der Bücher.

hitflip.de - Netzwerk für gebührenpflichtigen Medienartikeltausch. Hier können Artikel für beliebig viele Flips, 
die fiktive Währung von hitflip.de verkauft werden. Es fallen pro Kauf zusätzlich 0,99€-1,99€ Gebühren an. 
Flips werden vom Anbieter auch zum Kauf angeboten. Vorteile genauso wie bei tauschticket.de.


Alleinstellungsmerkmale

Die "Stöbern-Funktion", die es ermöglicht die Angebote der Nutzer zu sehen, die Bücher auf ihrer Wunschliste haben, 
welche man selbst in der Bibliothek hat ist in neu. Dann kann der Nutzer einfach ein gefundenes Buch zur Wunschliste 
hinzufügen und schon gibt es eine Übereinstimmung. So ist es für alle Nutzer attraktiv beliebte Bücher einzustellen. 
Wirklich direkten Büchertausch gibt es nicht, die recherchierten Seiten arbeiten alle mit einer fiktiven Währung, 
um die Notwendigkeit einer Übereinstimmung zu umgehen.


Methodischer Rahmen

Da die Gebrauchstauglichkeit ein wichtiger Aspekt ist, wenn es darum geht mit einer Anwendung viele 
Nutzer/Nutzergruppen zu erreichen, müssen Nutzer und die Benutzung im Allgemeinen besonders betrachtet werden. 
Hierzu werden MCI-Methoden für die Entwicklung analysiert. Eine generelle Unterscheidung ist die der 
benutzerzentrierten Entwicklung (user centered design) gegenüber der Aufgaben und Ziel orientierten Entwicklung 
(usage centered design).
Das Modell „discount usability engineering” nach Nielsen scheint ungeeignet und wird nicht angewendet, 
da es zu schlank wirkt, um alle wirklich wichtigen Usability-Ergebnisse für die Entwicklung des Systems 
liefern zu können.
Das Modell „usability engeneering lifecycle” nach Deborah Mayhew (Anforderungsanalyse, Designen/Testen/Entwickeln, 
Installation) scheint zunächst geeignet, geht aber zu wenig auf den Aspekt der Anforderungsanalyse ein, 
dem bei der geplanten Anwendung ein großes Maß an Wichtigkeit zugemessen wird, da die Erwartungen der Nutzer 
unbedingt erfüllt werden sollen.
Das Modell „scenario based usability engineering” nach Rosson und Carrol basiert auf Szenarien. 
Hier wird stark auf Nutzungskontexte und Aktivitäten eingegangen. Szenarien können ein gutes Mittel sein, 
um die Nutzer zu beschreiben. Da die Beschreibung der Nutzer für die geplante Anwendung aber nicht so sehr 
im Fokus steht wird dieses Model nicht gewählt.
Beim Modell „usage centered design“ nach Constantine und Lockwood werden Rollen und ihre Beziehungen modelliert 
und analysiert. Hierbei steht der Verwendungszweck im Mittelpunkt, dadurch scheint es optimal.
Das Modell, bzw. die Methoden der DIN EN ISO 9241-210 (Verstehen und Festlegen des Nutzungskontexts, 
Festlegen von Benutzeranforderungen und organisatorischen Anforderungen, Entwerfen von Gestaltungslösungen, 
Beurteilen von Gestaltungslösungen gegenüber Anforderungen) sind ein sinnvoller Weg. Vor allem, 
dass diese Norm mit unterschiedlichen Modellen gut kombiniert werden kann bietet einen großen Vorteil.
Eine Kombination aus diesen beiden letzten Methoden ("usage centered design" und ISO) scheint optimal für 
die Entwicklung der Anwendung und wird gewählt.


Kommunikationsmodell

Siehe Kommunikationsmodell.png, Buch suchen.png und Stöbern.png
Der Server verwaltet die Nutzerdaten (account management).
Noch nicht vorhandene topics (Buch-Artikel) werden über externe Suche von den Nutzern gefunden (ISBN, Autor, Titel), 
ausgewählt und das topic wird erstellt. [synchron]
Message Broker verwaltet topics und teilt bei Übereinstimmung zwischen Nutzern (publish Bibliothek und subscribe 
Wunschliste bei gleichem topic) diese den Nutzern mit. Dies geschieht über das Senden eines Tauschangebotes. 
Nehmen beide Nutzer das Angebot an wird das topic aktualisiert und beide Nutzer erhalten die relevanten Nutzerdaten 
des jeweils anderen Clients. [asynchron]
Stöbert der Nutzer nach Büchern bekommt er alle Nutzer angezeigt, die nach Büchern suchen, die er selbst anbietet. 
Hier kann nach verschiedenen Kriterien sortiert werden, zum Beispiel Menge der angebotenen Bücher.


Risiken

Ein Risiko in der Entwicklungperiode ist, das Meilensteine nicht eingehalten werden können, 
aufgrund technischer Hindernisse, schlechter/ungenauer Planung im Vorfeld oder beispielsweise auch Krankheit. 
Wenn es abzusehen ist, das das Projekt nicht im vollen Umfang realisiert werden kann, 
sollte die Priorisierung der Ziele zu Rate gezogen werden und weniger wichtige Ziele sollten dann nicht mehr 
umgesetzt werden. Um Meilensteine einhalten zu können muss also auf solche Faktoren in der Planung, 
namentlich dem Projektplan möglichst detailliert eingegangen werden; es müssen Pufferzeiten einkalkuliert werden. 
Pufferzeiten wirken Ausfällen entgegen und können im Idealfall sogar dazu führen, 
das man mehr Zeit für die Umsetzung weniger wichtiger Ziele hat. Ist die Planung des Projektes hingegen schlecht, 
so kann es dazu kommen, dass der Zeit- bzw. Personen-Aufwand viel größer ist als zunächst angenommen. 
Das gefährdet das gesammte Projekt in Hinsicht auf gewünschten Umfang und wirkt zusätzlich demotivierend, 
was wiederum negative Auswirkungen hat.


PoC

-Server aufsetzen und Clients mit Server verbinden
'Welches Risiko adressiert der PoC?' und 'Was ist das Ziel des PoC?'
Wurden die richtigen Technologien ausgewählt? Kann mit Hilfe dieser Mittel das Projekt mit den gegebenen Ressourcen in der vorgegebenen Zeit realisiert werden?
'Exit / Fail Kriterium'
Es gelingt nicht das System in seinen Grundzügen aufzusetzen.
'mögliche Alternativlösungen (Fallbacks) falls PoC nicht erfüllt werden kann'
Verwerfen und Wahl anderen Technologien.
'geplanter Termin und Status'
08.05.2015. Verbindung steht.

-Suchfunktion, Buch-Artikel finden (und topic erstellen)
'Welches Risiko adressiert der PoC?' und 'Was ist das Ziel des PoC?'
Sind die Funktionen realisierbar? Kann mit Hilfe der gewählten Mittel das Projekt mit den gegebenen Ressourcen in der vorgegebenen Zeit realisiert werden?
'Exit / Fail Kriterium'
Es gelingt nicht das System zu erweitern, da die Technologien nicht hinreichend verstanden werden bzw. umgesetzt werden können.
'mögliche Alternativlösungen (Fallbacks) falls PoC nicht erfüllt werden kann'
Verwerfen der Funktionen. Überdenken der Systemstruktur und Definieren neuer, umsetzbarer Funktionen. Eventuell nur lokale Testdaten verwenden und Problem hinten anstellen. 
'geplanter Termin und Status'
08.05.2015. Verbindung mit externem Service bisher nicht gelungen.

-Bibliothek und Wunschliste erzeugen und ändern (topics)
'Welches Risiko adressiert der PoC?' und 'Was ist das Ziel des PoC?'
Sind die Funktionen realisierbar? Kann mit Hilfe der gewählten Mittel das Projekt mit den gegebenen Ressourcen in der vorgegebenen Zeit realisiert werden?
'Exit / Fail Kriterium'
Es gelingt nicht das System zu maniulieren, da die Technologien nicht hinreichend verstanden werden bzw. umgesetzt werden können.
'mögliche Alternativlösungen (Fallbacks) falls PoC nicht erfüllt werden kann'
Verwerfen und Überdenken. Wahl anderer Technologien.
'geplanter Termin und Status'
08.05.2015. Manipulation der Datenbank gelingt.

-Benachrichtigung bei Übereinstimmung an Clients versenden
'Welches Risiko adressiert der PoC?' und 'Was ist das Ziel des PoC?'
Ist diese Funktion realisierbar? Kann mit Hilfe der gewählten Mittel das Projekt mit den gegebenen Ressourcen in der vorgegebenen Zeit realisiert werden?
'Exit / Fail Kriterium'
Es gelingt, da die Technologien nicht hinreichend verstanden werden bzw. umgesetzt werden können.
'mögliche Alternativlösungen (Fallbacks) falls PoC nicht erfüllt werden kann'
Verwerfen und Überdenken. Wahl anderer Technologien.
'geplanter Termin und Status'
08.05.2015. Anstoßen der Automatisierung bisher nicht gelungen.


Architekturdiagramm

siehe Architektur.png
Die Anwendung soll mittels Java und node.js realisiert werden, da diese aus dem Studium bekannte Technologien sind. 
Als Protokolle werden HTML und JSON verwendet. Die Anwendung soll auf Windows-Betriebssystemen laufen.


Architekturbegründung

Es wird eine Desktop-Anwendung umgesetzt. Eine reine Umsetzung für mobile Endgeräte scheint hier nicht sinnvoll, 
da niemand alle seine Bücher mit sich herumträgt. Trotzdem kann die Anwendung noch für mobile Endgeräten optimiert 
werden. Da Android auf Java basiert, bzw. Java unterstützt wird stellt dies kein Problem dar.


Projektplan

siehe Projektplan1.pdf
